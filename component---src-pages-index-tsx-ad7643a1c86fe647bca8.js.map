{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","webpack:///./src/themes.ts","webpack:///./src/pages/index.tsx","webpack:///./src/hooks/useLocalStorage.ts","webpack:///./src/components/PostListing.tsx","webpack:///./node_modules/url-join/lib/url-join.js"],"names":["SEO","title","description","image","postURL","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","urljoin","config","siteUrl","pathPrefix","siteTitle","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","props","children","localTheme","theme","outerTheme","useTheme","useMemo","output","mergeOuterLocalTheme","nested","createElement","ThemeContext","Provider","value","themes","light","createMuiTheme","palette","dark","pageQuery","Index","key","initialValue","isServer","storedValue","setStoredValue","data","window","useState","localStorage","getItem","parse","error","console","log","valueToStore","Function","setItem","Layout","Helmet","PostListing","postEdges","allMarkdownRemark","edges","postList","map","postEdge","path","node","fields","slug","tags","categories","date","timeToRead","container","spacing","post","xs","md","underline","href","variant","join","definition","normalize","str","options","replace","input","arguments","joined","slice","call","module","exports"],"mappings":"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","file":"component---src-pages-index-tsx-ad7643a1c86fe647bca8.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport urljoin from 'url-join'\nimport config from '../../data/SiteConfig'\n\nconst SEO = ({ postNode, postPath, postSEO }) => {\n  let title\n  let description\n  let image\n  let postURL\n  if (postSEO) {\n    const postMeta = postNode.frontmatter\n    ;({ title } = postMeta)\n    description = postMeta.description ? postMeta.description : postNode.excerpt\n    image = postMeta.cover\n    postURL = urljoin(config.siteUrl, config.pathPrefix, postPath)\n  } else {\n    title = config.siteTitle\n    description = config.siteDescription\n    image = config.siteLogo\n  }\n\n  image = urljoin(config.siteUrl, config.pathPrefix, image)\n  const blogURL = urljoin(config.siteUrl, config.pathPrefix)\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n    }\n  ]\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image\n            }\n          }\n        ]\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image\n        },\n        description\n      }\n    )\n  }\n  return (\n    <Helmet>\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta\n        property=\"fb:app_id\"\n        content={config.siteFBAppID ? config.siteFBAppID : ''}\n      />\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta\n        name=\"twitter:creator\"\n        content={config.userTwitter ? config.userTwitter : ''}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  )\n}\n\nexport default SEO\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends(_extends({}, outerTheme), localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n}\n\nexport default ThemeProvider;","import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles'\n\nconst light = createMuiTheme({\n    palette: {\n        type: 'light',\n    },\n});\n\nconst dark = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nconst themes = { light, dark }\n\nexport default themes\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout/Layout'\nimport PostListing from '../components/PostListing'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\nimport { makeStyles, Theme, ThemeProvider } from '@material-ui/core'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport themes from '../themes'\n\ntype ThemeMode = 'light' | 'dark'\n\nconst Index = ({ data }) => {\n  const [theme, setTheme] = useLocalStorage('theme', 'light')\n\n  return (\n    <ThemeProvider theme={themes[theme as ThemeMode]}>\n      <Layout>\n        <main>\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={data.allMarkdownRemark.edges} />\n        </main>\n      </Layout>\n    </ThemeProvider>\n  )\n}\n\nexport default Index\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useState } from 'react'\n\n/**\n * React Hook wrapper for LocalStorage\n * @usage has the same API of useState\n * @param key storage key like localStorage.getItem('key')\n * @param initialValue\n */\n\ntype PersistReturn = [any, (arg1?: any) => void]\n\nexport type usePersistFunc = (key: string) => PersistReturn\n\nexport default function useLocalStorage(key: string, initialValue: any) {\n    // Prevent build error \"window is undefined\" but keep keep working\n    const isServer = typeof window === 'undefined'\n\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        // Get from local storage then\n        // parse stored json or return initialValue\n        if (isServer) {\n            return initialValue\n        }\n\n        try {\n            const item = window.localStorage.getItem(key)\n            return item ? JSON.parse(item) : initialValue\n        } catch (error) {\n            console.log(error)\n            return initialValue\n        }\n    })\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value: any) => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value\n            // Save state\n            setStoredValue(valueToStore)\n            // Save to local storage\n            if (!isServer) {\n                window.localStorage.setItem(key, JSON.stringify(valueToStore))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return [storedValue, setValue]\n}\n","import React from 'react'\nimport { Typography, Grid, Link } from '@material-ui/core'\n\nconst PostListing = ({ postEdges }) => {\n  const getPostList = () => {\n    const postList = postEdges.map((postEdge: any) => {\n      return {\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        categories: postEdge.node.frontmatter.categories,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      }\n    })\n\n    return postList\n  }\n\n  const postList = getPostList()\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        {\n          postList.map((post: any) => (\n            <Grid item xs={12} md={6}>\n              <article >\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <Link underline=\"none\" href={post.path} key={post.title}>\n                      <Typography variant=\"h5\">\n                        {post.title}\n                      </Typography>\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"caption\">\n                      {post.date} &mdash; <span>{post.categories.join(' / ')}</span>{' '} &mdash; {post.timeToRead} Min Read{' '}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"body1\">{post.excerpt}</Typography>\n                  </Grid>\n                </Grid>\n              </article>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </>\n  )\n}\n\nexport default PostListing\n","require(\"core-js/modules/es6.regexp.replace\");\n\n(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(str, options) {\n    // make sure protocol is followed by two slashes\n    str = str.replace(/:\\//g, '://'); // remove consecutive slashes\n\n    str = str.replace(/([^:\\s])\\/+/g, '$1/'); // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n});"],"sourceRoot":""}